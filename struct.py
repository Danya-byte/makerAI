import os

# –ü–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å
IGNORE_DIRS = [
    'node_modules',  # –ü–∞–ø–∫–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ Node.js
    'venv',  # –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ Python
    '.git',  # –ü–∞–ø–∫–∞ Git
    '__pycache__',  # –ö—ç—à Python
    '.vscode',  # –ü–∞–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ VS Code
    '.idea',  # –ü–∞–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ PyCharm/IntelliJ
    'dist',  # –ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
    'build',  # –ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
]


def print_project_structure(start_path, ignore_dirs, prefix=""):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞."""
    if not os.path.isdir(start_path):
        print(f"{prefix}üìÑ {os.path.basename(start_path)}")
        return

    print(f"{prefix}üìÅ {os.path.basename(start_path)}")
    prefix += "    "

    for item in sorted(os.listdir(start_path)):
        item_path = os.path.join(start_path, item)
        if os.path.isdir(item_path) and item in ignore_dirs:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –ø–∞–ø–∫–∏
        print_project_structure(item_path, ignore_dirs, prefix)


if __name__ == "__main__":
    project_path = os.getcwd()  # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É)
    print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞: {project_path}")
    print_project_structure(project_path, IGNORE_DIRS)
